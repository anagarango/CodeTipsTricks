import Head from 'next/head'
import { useRouter } from 'next/router'
import { prisma } from '@/server/database/client'
import NavBar from '@/components/navbar'
import { useState } from 'react'
import { signIn, signOut } from "next-auth/react"
import RegisterForm from '@/components/registerform'
import { useSession } from "next-auth/react"

export default function Home({posts}) {
  const r = useRouter()
  const [form, setForm] = useState(false)
  const handleSignInWithGitHub = () => signIn("github")
  const {data:session} = useSession()
  
  const handleCreatePost = () => {
    if(!session){
      setForm("signIn")
    } else {
      r.push("/submit")
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar onClickSignIn={()=>setForm("signIn")} onClickSignOut={()=>setForm("signOut")} />
      <main>
        <div onClick={handleCreatePost} className="w-full">Create A Post</div>
        {posts.map((o, index) => (
            <div key={index}>
              <li onClick={()=>{r.push(`/post/${o.id}`)}}>{o.title}</li>
              <p>{o.user.name}</p>
            </div>
          )
          )}
          {form == "signIn" && <RegisterForm githubOnClick={handleSignInWithGitHub} closeOnClick={()=>setForm(false)}></RegisterForm>}
          {form == "signOut" && signOut()}
      </main>
    </>
  )
}

export async function getServerSideProps(){
  const posts = await prisma.post.findMany({
    orderBy: {
      createdAt: "desc"
    },
    include: {
      user: true
    }
  })

  return{
    props:{
      posts: JSON.parse(JSON.stringify(posts))
    }
  }
}